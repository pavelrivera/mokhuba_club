{# templates/payment/_payment_modal.html.twig #}
<!-- Payment Modal -->
<div class="modal hidden" id="paymentModal">
    <div class="modal-content" style="max-width: 600px;">
        <button class="close-modal" onclick="closePaymentModal()">
            <i class="fas fa-times"></i>
        </button>
        <div class="modal-header">
            <h2 class="modal-title">
                <i class="fas fa-credit-card"></i>
                Completar Pago
            </h2>
        </div>
        <div id="payment-content" class="card-body">
            <!-- Content will be loaded dynamically -->
        </div>
    </div>
</div>

<style>
/* Payment Modal Styles */
.payment-form {
    padding: 20px 0;
}

.form-group {
    margin-bottom: 20px;
}

.form-label {
    display: block;
    color: var(--gold-primary);
    font-weight: 600;
    margin-bottom: 8px;
    font-size: 0.95rem;
}

.form-input {
    width: 100%;
    padding: 12px 16px;
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(212, 175, 55, 0.3);
    border-radius: 8px;
    color: var(--cream);
    font-size: 1rem;
    transition: all 0.3s ease;
}

.form-input:focus {
    outline: none;
    border-color: var(--gold-primary);
    box-shadow: 0 0 0 3px rgba(212, 175, 55, 0.1);
}

.form-input::placeholder {
    color: rgba(255, 248, 220, 0.4);
}

.form-row {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 15px;
}

.card-icon {
    position: absolute;
    right: 12px;
    top: 50%;
    transform: translateY(-50%);
    font-size: 1.5rem;
    color: var(--gold-primary);
}

.card-number-wrapper {
    position: relative;
}

.payment-summary {
    background: rgba(0, 0, 0, 0.3);
    border: 1px solid rgba(212, 175, 55, 0.3);
    border-radius: 12px;
    padding: 20px;
    margin-bottom: 25px;
}

.summary-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 12px;
    color: var(--cream);
}

.summary-row:last-child {
    margin-bottom: 0;
    padding-top: 12px;
    border-top: 1px solid rgba(212, 175, 55, 0.3);
    font-weight: 700;
    font-size: 1.1rem;
}

.summary-label {
    color: rgba(255, 248, 220, 0.8);
}

.summary-value {
    color: var(--gold-primary);
    font-weight: 600;
}

.payment-actions {
    display: flex;
    gap: 15px;
    justify-content: center;
    margin-top: 25px;
}

.secure-badge {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    color: rgba(16, 185, 129, 0.8);
    font-size: 0.85rem;
    margin-top: 15px;
}

.secure-badge i {
    color: #10b981;
}

.error-message {
    background: rgba(239, 68, 68, 0.1);
    border: 1px solid rgba(239, 68, 68, 0.3);
    color: #ef4444;
    padding: 12px;
    border-radius: 8px;
    margin-bottom: 20px;
    display: none;
}

.error-message.show {
    display: block;
}

.loading-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 20px;
    z-index: 1000;
}

.loading-spinner {
    text-align: center;
}

.loading-spinner i {
    font-size: 3rem;
    color: var(--gold-primary);
    animation: spin 1s linear infinite;
}

@keyframes spin {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
}

/* Mock Mode Badge */
.mock-badge {
    background: rgba(245, 158, 11, 0.2);
    border: 1px solid rgba(245, 158, 11, 0.4);
    color: #fbbf24;
    padding: 8px 12px;
    border-radius: 8px;
    font-size: 0.85rem;
    text-align: center;
    margin-bottom: 20px;
}

.mock-badge i {
    margin-right: 6px;
}
</style>

<script>
// Payment Modal Management
let currentPaymentLevel = null;

function showPaymentModal(level, membershipData) {
    currentPaymentLevel = level;
    const modal = document.getElementById('paymentModal');
    const content = document.getElementById('payment-content');
    
    const isMockMode = {{ stripe_config.mock_mode|default(true) ? 'true' : 'false' }};
    
    content.innerHTML = `
        ${isMockMode ? '<div class="mock-badge"><i class="fas fa-flask"></i> Modo de prueba - No se realizarán cargos reales</div>' : ''}
        
        <div class="error-message" id="payment-error"></div>
        
        <div class="payment-summary">
            <h4 style="color: var(--gold-primary); margin-bottom: 15px; font-size: 1.2rem;">Resumen del Pago</h4>
            <div class="summary-row">
                <span class="summary-label">Membresía ${membershipData.name}</span>
                <span class="summary-value">$${membershipData.price} USD</span>
            </div>
            <div class="summary-row">
                <span class="summary-label">Periodo</span>
                <span class="summary-value">Anual</span>
            </div>
            <div class="summary-row">
                <strong class="summary-label">Total a Pagar</strong>
                <strong class="summary-value">$${membershipData.price} USD</strong>
            </div>
        </div>
        
        <form id="paymentForm" class="payment-form">
            <div class="form-group">
                <label class="form-label" for="cardNumber">
                    <i class="fas fa-credit-card"></i> Número de Tarjeta
                </label>
                <div class="card-number-wrapper">
                    <input 
                        type="text" 
                        id="cardNumber" 
                        class="form-input" 
                        placeholder="1234 5678 9012 3456"
                        maxlength="19"
                        required
                        ${isMockMode ? 'value="4242 4242 4242 4242"' : ''}
                    >
                    <i class="fab fa-cc-visa card-icon"></i>
                </div>
            </div>
            
            <div class="form-row">
                <div class="form-group">
                    <label class="form-label" for="cardExpiry">
                        <i class="far fa-calendar"></i> Fecha de Expiración
                    </label>
                    <input 
                        type="text" 
                        id="cardExpiry" 
                        class="form-input" 
                        placeholder="MM/AA"
                        maxlength="5"
                        required
                        ${isMockMode ? 'value="12/25"' : ''}
                    >
                </div>
                
                <div class="form-group">
                    <label class="form-label" for="cardCvc">
                        <i class="fas fa-lock"></i> CVV
                    </label>
                    <input 
                        type="text" 
                        id="cardCvc" 
                        class="form-input" 
                        placeholder="123"
                        maxlength="4"
                        required
                        ${isMockMode ? 'value="123"' : ''}
                    >
                </div>
            </div>
            
            <div class="form-group">
                <label class="form-label" for="cardName">
                    <i class="fas fa-user"></i> Nombre del Titular
                </label>
                <input 
                    type="text" 
                    id="cardName" 
                    class="form-input" 
                    placeholder="NOMBRE APELLIDO"
                    required
                    ${isMockMode ? 'value="TEST USER"' : ''}
                >
            </div>
            
            <div class="payment-actions">
                <button type="submit" class="premium-button" style="padding: 15px 40px;">
                    <i class="fas fa-lock"></i>
                    Pagar $${membershipData.price} USD
                </button>
                <button type="button" class="edit-profile-btn" onclick="closePaymentModal()" style="padding: 15px 30px;">
                    Cancelar
                </button>
            </div>
            
            <div class="secure-badge">
                <i class="fas fa-shield-alt"></i>
                <span>Pago seguro y encriptado</span>
            </div>
        </form>
    `;
    
    modal.classList.remove('hidden');
    
    // Setup form handlers
    setupPaymentFormHandlers();
}

function setupPaymentFormHandlers() {
    const form = document.getElementById('paymentForm');
    const cardNumber = document.getElementById('cardNumber');
    const cardExpiry = document.getElementById('cardExpiry');
    const cardCvc = document.getElementById('cardCvc');
    
    // Format card number
    cardNumber.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\s/g, '');
        let formattedValue = value.match(/.{1,4}/g)?.join(' ') || value;
        e.target.value = formattedValue;
    });
    
    // Format expiry date
    cardExpiry.addEventListener('input', function(e) {
        let value = e.target.value.replace(/\D/g, '');
        if (value.length >= 2) {
            value = value.slice(0, 2) + '/' + value.slice(2, 4);
        }
        e.target.value = value;
    });
    
    // Format CVC (only numbers)
    cardCvc.addEventListener('input', function(e) {
        e.target.value = e.target.value.replace(/\D/g, '');
    });
    
    // Handle form submission
    form.addEventListener('submit', handlePaymentSubmit);
}

async function handlePaymentSubmit(e) {
    e.preventDefault();
    
    const errorDiv = document.getElementById('payment-error');
    errorDiv.classList.remove('show');
    errorDiv.textContent = '';
    
    // Show loading
    const modal = document.querySelector('#paymentModal .modal-content');
    const loadingOverlay = document.createElement('div');
    loadingOverlay.className = 'loading-overlay';
    loadingOverlay.innerHTML = `
        <div class="loading-spinner">
            <i class="fas fa-spinner fa-spin"></i>
            <p style="color: var(--gold-primary); margin-top: 15px;">Procesando pago...</p>
        </div>
    `;
    modal.appendChild(loadingOverlay);
    
    // Get form data
    const formData = {
        membership_level: currentPaymentLevel,
        card_number: document.getElementById('cardNumber').value.replace(/\s/g, ''),
        card_expiry: document.getElementById('cardExpiry').value,
        card_cvc: document.getElementById('cardCvc').value,
        card_name: document.getElementById('cardName').value
    };
    
    try {
        // Call the payment endpoint
        const response = await fetch('{{ path('payment_process') }}', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify(formData)
        });
        
        const result = await response.json();
        
        if (result.success) {
            // Redirect to success page
            window.location.href = result.redirect_url;
        } else {
            // Show error
            loadingOverlay.remove();
            errorDiv.textContent = result.error || 'Hubo un error procesando tu pago. Por favor intenta de nuevo.';
            errorDiv.classList.add('show');
        }
    } catch (error) {
        console.error('Payment error:', error);
        loadingOverlay.remove();
        errorDiv.textContent = 'Error de conexión. Por favor verifica tu conexión e intenta de nuevo.';
        errorDiv.classList.add('show');
    }
}

function closePaymentModal() {
    document.getElementById('paymentModal').classList.add('hidden');
    currentPaymentLevel = null;
}

// Close modal when clicking outside
document.getElementById('paymentModal')?.addEventListener('click', function(e) {
    if (e.target === this) {
        closePaymentModal();
    }
});
</script>
